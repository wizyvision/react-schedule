"use strict";
self["webpackHotUpdate_wizyvision_react_schedule"]("stories-Scheduler-stories",{

/***/ "./src/lib/components/Scheduler/Scheduler.js":
/*!***************************************************!*\
  !*** ./src/lib/components/Scheduler/Scheduler.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _context_SchedulerProvider__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../context/SchedulerProvider */ "./src/lib/context/SchedulerProvider.js");
/* harmony import */ var _Calendar__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Calendar */ "./src/lib/components/Calendar/index.js");




/**
 * <p>Scheduler is composed of different libraries such as React-DND, moment, and MUI.</p>
 *
 * <p>This was created to accomodate the use case for scheduling apppointments for each user in each slot. The Scheduler component has the following functionalities:</p>
 *
 * <ul style="list-style: none;">
 * <li>1. Changing the date for Scheduler
 *  <ul style="list-style: none;">
 *    <li> 1.1. Can set the date for today
 *    <li> 1.2. Can change the date previously or the next date
 *    <li> 1.3. Manually changing the date in date picker
 *  </ul>
 * <li>2. Changing the duration of the appointment, before it was about to dropped inside the Scheduler
 * <li>3. Drag and drop from outside to inside of the Scheduler
 * <li>4. Drag and drop across the Scheduler
 * <li>5. Concurrent appointments
 * </ul>
 *  */ var Scheduler = function(props) {
    console.log(props);
    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_context_SchedulerProvider__WEBPACK_IMPORTED_MODULE_1__.SchedulerProvider, props, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", null, "Hello world"), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Calendar__WEBPACK_IMPORTED_MODULE_2__["default"], null));
};
Scheduler.propTypes = {
    /**
   * Selected `groupId` to filter the users
   * @default ''
   */ groupId: (prop_types__WEBPACK_IMPORTED_MODULE_3___default().string),
    /**
   * `groups` is the list of groupId to filter the users
   * @default []
   */ groups: (prop_types__WEBPACK_IMPORTED_MODULE_3___default().array),
    /**
   * `users` is displayed in the first column. This prop is required.
   * @default []
   */ users: (prop_types__WEBPACK_IMPORTED_MODULE_3___default().array).isRequired,
    /**
   * `appointmentList` is a list of scheduled appointment with user. This list can be set with `onAppointmentChange`. This prop is required.
   * @default []
   */ appointmentList: (prop_types__WEBPACK_IMPORTED_MODULE_3___default().array).isRequired,
    /**
   * `onAppointmentChange` handles the changes for `appointmentList`. This prop is required.
   */ onAppointmentChange: (prop_types__WEBPACK_IMPORTED_MODULE_3___default().func).isRequired,
    /**
   * `durationOptions` is an array of numbers to be set for each appointment that can be dropped inside the scheduler. This prop is required.
   * @default [30,60,120]
   */ durationOptions: (prop_types__WEBPACK_IMPORTED_MODULE_3___default().array).isRequired,
    /**
   * `duration` is the selected duration among `durationOptions`. This prop is required.
   * @default 60
   */ duration: (prop_types__WEBPACK_IMPORTED_MODULE_3___default().number).isRequired,
    /**
   * Handles changing duration
   */ onDurationChange: (prop_types__WEBPACK_IMPORTED_MODULE_3___default().func),
    /**
   * Default date is set to current date
   */ date: prop_types__WEBPACK_IMPORTED_MODULE_3___default().instanceOf(Date),
    /**
   * Handles to change the date
   */ onDateChange: (prop_types__WEBPACK_IMPORTED_MODULE_3___default().func),
    /**
   * Handles to go to the previous date
   */ onPrevDate: (prop_types__WEBPACK_IMPORTED_MODULE_3___default().func),
    /**
   * Handles to go to the next date
   */ onNextDate: (prop_types__WEBPACK_IMPORTED_MODULE_3___default().func),
    /**
   * This is to customized the Slots
   */ SlotProps: (prop_types__WEBPACK_IMPORTED_MODULE_3___default().object),
    /**
   * This is to customized the Slots
   */ AppointmentProps: (prop_types__WEBPACK_IMPORTED_MODULE_3___default().object),
    /**
   * Color is used to change the theme of the scheduler: `primary` | `secondary`
   * @default `primary`
   */ color: (prop_types__WEBPACK_IMPORTED_MODULE_3___default().string)
};
Scheduler.defaultProps = {
    groupId: "",
    groups: [],
    users: [],
    appointmentList: [],
    durationOptions: [
        30,
        60,
        120
    ],
    duration: 60,
    date: Date.now(),
    color: "primary"
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Scheduler);
Scheduler.__docgenInfo = {
    "description": '<p>Scheduler is composed of different libraries such as React-DND, moment, and MUI.</p>\n\n<p>This was created to accomodate the use case for scheduling apppointments for each user in each slot. The Scheduler component has the following functionalities:</p>\n\n<ul style="list-style: none;">\n<li>1. Changing the date for Scheduler\n <ul style="list-style: none;">\n   <li> 1.1. Can set the date for today\n   <li> 1.2. Can change the date previously or the next date\n   <li> 1.3. Manually changing the date in date picker\n </ul>\n<li>2. Changing the duration of the appointment, before it was about to dropped inside the Scheduler\n<li>3. Drag and drop from outside to inside of the Scheduler\n<li>4. Drag and drop across the Scheduler\n<li>5. Concurrent appointments\n</ul>',
    "methods": [],
    "displayName": "Scheduler",
    "props": {
        "groupId": {
            "defaultValue": {
                "value": '""',
                "computed": false
            },
            "description": "Selected `groupId` to filter the users\n@default ''",
            "type": {
                "name": "string"
            },
            "required": false
        },
        "groups": {
            "defaultValue": {
                "value": "[]",
                "computed": false
            },
            "description": "`groups` is the list of groupId to filter the users\n@default []",
            "type": {
                "name": "array"
            },
            "required": false
        },
        "users": {
            "defaultValue": {
                "value": "[]",
                "computed": false
            },
            "description": "`users` is displayed in the first column. This prop is required.\n@default []",
            "type": {
                "name": "array"
            },
            "required": false
        },
        "appointmentList": {
            "defaultValue": {
                "value": "[]",
                "computed": false
            },
            "description": "`appointmentList` is a list of scheduled appointment with user. This list can be set with `onAppointmentChange`. This prop is required.\n@default []",
            "type": {
                "name": "array"
            },
            "required": false
        },
        "durationOptions": {
            "defaultValue": {
                "value": "[30, 60, 120]",
                "computed": false
            },
            "description": "`durationOptions` is an array of numbers to be set for each appointment that can be dropped inside the scheduler. This prop is required.\n@default [30,60,120]",
            "type": {
                "name": "array"
            },
            "required": false
        },
        "duration": {
            "defaultValue": {
                "value": "60",
                "computed": false
            },
            "description": "`duration` is the selected duration among `durationOptions`. This prop is required.\n@default 60",
            "type": {
                "name": "number"
            },
            "required": false
        },
        "date": {
            "defaultValue": {
                "value": "Date.now()",
                "computed": true
            },
            "description": "Default date is set to current date",
            "type": {
                "name": "instanceOf",
                "value": "Date"
            },
            "required": false
        },
        "color": {
            "defaultValue": {
                "value": "'primary'",
                "computed": false
            },
            "description": "Color is used to change the theme of the scheduler: `primary` | `secondary`\n@default `primary`",
            "type": {
                "name": "string"
            },
            "required": false
        },
        "onAppointmentChange": {
            "description": "`onAppointmentChange` handles the changes for `appointmentList`. This prop is required.",
            "type": {
                "name": "func"
            },
            "required": true
        },
        "onDurationChange": {
            "description": "Handles changing duration",
            "type": {
                "name": "func"
            },
            "required": false
        },
        "onDateChange": {
            "description": "Handles to change the date",
            "type": {
                "name": "func"
            },
            "required": false
        },
        "onPrevDate": {
            "description": "Handles to go to the previous date",
            "type": {
                "name": "func"
            },
            "required": false
        },
        "onNextDate": {
            "description": "Handles to go to the next date",
            "type": {
                "name": "func"
            },
            "required": false
        },
        "SlotProps": {
            "description": "This is to customized the Slots",
            "type": {
                "name": "object"
            },
            "required": false
        },
        "AppointmentProps": {
            "description": "This is to customized the Slots",
            "type": {
                "name": "object"
            },
            "required": false
        }
    }
};


/***/ })

});
//# sourceMappingURL=stories-Scheduler-stories.604f0d91ca6f61b48ede.hot-update.js.map