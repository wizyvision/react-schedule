{"version":3,"file":"stories-Scheduler-stories.1ee930c321d3792440f5.hot-update.js","mappings":";;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA","sources":["webpack://@wizyvision/react-schedule/./src/lib/constants/appointment.js","webpack://@wizyvision/react-schedule/./src/lib/container/Slot/index.js"],"sourcesContent":["const WIDTH = 100\nconst HEIGHT = 65;\nconst MIN_HEIGHT = 35;\n\nconst HEIGHT_REDUCTION_CONCURRENT = 5;\n\nexport {\n    WIDTH,\n    HEIGHT,\n    MIN_HEIGHT,\n    HEIGHT_REDUCTION_CONCURRENT,\n}","import { TableCell, useTheme, lighten } from '@mui/material';\nimport { HEIGHT } from '../../constants/appointment';\nimport { slotBg } from '../../utils/getAppointmentStyle';\nimport { useSchedulerContext } from '../../context/SchedulerProvider';\nimport { styled } from '@mui/system';\n\nconst Slot = styled(TableCell)((props) => {\n  const { color = \"primary\", SlotProps, } = useSchedulerContext()\n  const { index, canDrop, isOver, width, theme } = props;\n  const { secondaryDuration = 30, style, slotBackground} = SlotProps || {};\n  const { dropBg, overBg } = slotBackground || {};\n  \n  const slotColor = slotBackgroundColor(theme);\n  const overColor = overBackgroundColor(theme);\n  const dropColor = dropBackgroundColor(theme);\n\n  console.log({slotColor})\n\n  let backgroundColor = slotColor[color];\n   \n    if (canDrop && isOver) {\n      backgroundColor = dropBg || dropColor[color]; // Highlight color when canDrop and isOver\n    } else if (canDrop) {\n      backgroundColor = overBg || overColor[color]; // Color when only canDrop is true\n    }\n    return backgroundColor;\n  \n\n  // const borderRightColor = () => {\n  //   let color = theme.palette.borderRightColor.light\n  //   switch (secondaryDuration) {\n  //     case 15:\n  //       color = index % 4 !== 3 ? \n  //       theme.palette.borderRightColor.light\n  //       : theme.palette.borderRightColor.main; \n  //       break;\n  //     default:\n  //       color = index % 2 !== 1 ? \n  //       theme.palette.borderRightColor.light\n  //       : theme.palette.borderRightColor.main; \n  //       break;\n  //   }\n  //   return color;\n  // };\n\n  // const borderRightStyle = () => {\n  //   switch (secondaryDuration) {\n  //     case 15:\n  //       if (index % 2 !== 1) {\n  //         return 'none';\n  //       }\n  //       return 'solid';\n  //     default:\n  //       return 'solid';\n  //   }\n  // };\n\n  return {\n    paddingTop: theme.spacing(1),\n    paddingBottom: theme.spacing(1),\n    paddingLeft: 0,\n    paddingRight: 0,\n    position: 'relative',\n    backgroundColor: bg,\n    width: width,\n    height: HEIGHT,\n    overflow: 'visible',\n    verticalAlign: 'top',\n    borderRightWidth: '1px',\n    borderRightStyle: 'solid',\n    borderRightColor: theme.palette.borderRightColor.light,\n    // borderRightStyle: borderRightStyle(),\n    ...style,\n  };\n});\n\nexport default Slot;\n"],"names":[],"sourceRoot":""}